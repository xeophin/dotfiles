[core]
	excludesfile = ~/.gitignore_global

	# Make `git rebase` safer on macOS
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false

  # Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false
	autocrlf = input

[push]
	default = simple

	# Make `git push` push relevant annotated tags when pushing branches out.
  followTags = true

[alias]
	unstage = reset HEAD --
	uncommit = reset --soft HEAD~

	# Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

  # Amend the currently staged files to the latest commit
  amend = commit --amend --reuse-message=HEAD

[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process

[user]
	name = Kaspar Manz
	useConfigOnly = true
	email = code@xeophin.net

# Selected .gitconfig goodness based on https://github.com/mathiasbynens/dotfiles/blob/master/.gitconfig

[help]

	# Automatically correct and execute mistyped commands
	autocorrect = 1

[merge]

	# Include summaries of merged commits in newly created merge commit messages
	log = true
	tool = opendiff
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[push]
	default = current
[alias]
	unstage = reset HEAD --
	uncommit = reset --soft HEAD~
	rb = "!f() { \
	    echo fetching...; \
	    git fetch; \
	    if [ $? -eq 0 ]; then \
		last_status=$(git status --untracked-files=no --porcelain); \
		if [ \"$last_status\" != \"\" ]; then \
		    echo stashing local changes...; \
		    git stash; \
		else \
		    echo nothing to stash...; \
		fi;\
		if [ $? -eq 0 ]; then \
		    echo rebasing...;\
		    git rebase;\
		    if [ $? -eq 0 ]; then \
			if [ \"$last_status\" != \"\" ]; then\
			    echo applying stashed changes...;\
			    git stash pop;\
			    if [ $? -ne 0 ]; then \
				echo STASH POP FAIL - you will need to resolve merge conflicts with git mergetool; \
			    fi; \
			fi; \
		    else \
			echo REBASE FAILED - you will need to manually run stash pop; \
		    fi;\
		fi;\
	    fi; \
	    if [ $? -ne 0 ]; then \
		echo ERROR: Operation failed; \
	    fi; \
	}; f"

    # View the current working tree status using the short format
    stat = status -s

    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --pretty=oneline -n 20 --graph --abbrev-commit

[pull]
	rebase = true

[init]
	defaultBranch = main

# Conditional config based on https://myme.no/posts/2023-01-22-git-commands-you-do-not-need.html#:~:text=Git%20conditional-,configuration,-It%E2%80%99s%20hard%20to

[includeIf "gitdir:~/dev/nzz/"]
path = "~/dotfiles/git/nzz_config"
